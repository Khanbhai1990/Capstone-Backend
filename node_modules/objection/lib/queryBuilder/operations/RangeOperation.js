'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _QueryBuilderOperation = require('./QueryBuilderOperation');

var _QueryBuilderOperation2 = _interopRequireDefault(_QueryBuilderOperation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RangeOperation = function (_QueryBuilderOperatio) {
  (0, _inherits3.default)(RangeOperation, _QueryBuilderOperatio);

  function RangeOperation(name, opt) {
    (0, _classCallCheck3.default)(this, RangeOperation);

    var _this = (0, _possibleConstructorReturn3.default)(this, _QueryBuilderOperatio.call(this, name, opt));

    _this.resultSizePromise = null;
    return _this;
  }

  RangeOperation.prototype.call = function call(builder, args) {
    if (args.length === 2) {
      var start = args[0];
      var end = args[1];

      // Need to set these here instead of `onBuild` so that they
      // don't end up in the resultSize query.
      builder.limit(end - start + 1).offset(start);
    }

    return true;
  };

  RangeOperation.prototype.onBefore = function onBefore(builder) {
    // Don't return the promise so that it is executed
    // in parallel with the actual query.
    this.resultSizePromise = builder.resultSize();
    return null;
  };

  RangeOperation.prototype.onAfter = function onAfter(builder, result) {
    return this.resultSizePromise.then(function (count) {
      return {
        results: result,
        total: parseInt(count, 10)
      };
    });
  };

  return RangeOperation;
}(_QueryBuilderOperation2.default);

exports.default = RangeOperation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJhbmdlT3BlcmF0aW9uLmpzIl0sIm5hbWVzIjpbIlJhbmdlT3BlcmF0aW9uIiwibmFtZSIsIm9wdCIsInJlc3VsdFNpemVQcm9taXNlIiwiY2FsbCIsImJ1aWxkZXIiLCJhcmdzIiwibGVuZ3RoIiwic3RhcnQiLCJlbmQiLCJsaW1pdCIsIm9mZnNldCIsIm9uQmVmb3JlIiwicmVzdWx0U2l6ZSIsIm9uQWZ0ZXIiLCJyZXN1bHQiLCJ0aGVuIiwicmVzdWx0cyIsInRvdGFsIiwicGFyc2VJbnQiLCJjb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7SUFFcUJBLGM7OztBQUVuQiwwQkFBWUMsSUFBWixFQUFrQkMsR0FBbEIsRUFBdUI7QUFBQTs7QUFBQSwrREFDckIsaUNBQU1ELElBQU4sRUFBWUMsR0FBWixDQURxQjs7QUFFckIsVUFBS0MsaUJBQUwsR0FBeUIsSUFBekI7QUFGcUI7QUFHdEI7OzJCQUVEQyxJLGlCQUFLQyxPLEVBQVNDLEksRUFBTTtBQUNsQixRQUFJQSxLQUFLQyxNQUFMLEtBQWdCLENBQXBCLEVBQXVCO0FBQ3JCLFVBQU1DLFFBQVFGLEtBQUssQ0FBTCxDQUFkO0FBQ0EsVUFBTUcsTUFBTUgsS0FBSyxDQUFMLENBQVo7O0FBRUE7QUFDQTtBQUNBRCxjQUFRSyxLQUFSLENBQWNELE1BQU1ELEtBQU4sR0FBYyxDQUE1QixFQUErQkcsTUFBL0IsQ0FBc0NILEtBQXRDO0FBQ0Q7O0FBRUQsV0FBTyxJQUFQO0FBQ0QsRzs7MkJBRURJLFEscUJBQVNQLE8sRUFBUztBQUNoQjtBQUNBO0FBQ0EsU0FBS0YsaUJBQUwsR0FBeUJFLFFBQVFRLFVBQVIsRUFBekI7QUFDQSxXQUFPLElBQVA7QUFDRCxHOzsyQkFFREMsTyxvQkFBUVQsTyxFQUFTVSxNLEVBQVE7QUFDdkIsV0FBTyxLQUFLWixpQkFBTCxDQUF1QmEsSUFBdkIsQ0FBNEIsaUJBQVM7QUFDMUMsYUFBTztBQUNMQyxpQkFBU0YsTUFESjtBQUVMRyxlQUFPQyxTQUFTQyxLQUFULEVBQWdCLEVBQWhCO0FBRkYsT0FBUDtBQUlELEtBTE0sQ0FBUDtBQU1ELEc7Ozs7O2tCQWxDa0JwQixjIiwiZmlsZSI6IlJhbmdlT3BlcmF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFF1ZXJ5QnVpbGRlck9wZXJhdGlvbiBmcm9tICcuL1F1ZXJ5QnVpbGRlck9wZXJhdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJhbmdlT3BlcmF0aW9uIGV4dGVuZHMgUXVlcnlCdWlsZGVyT3BlcmF0aW9uIHtcblxuICBjb25zdHJ1Y3RvcihuYW1lLCBvcHQpIHtcbiAgICBzdXBlcihuYW1lLCBvcHQpO1xuICAgIHRoaXMucmVzdWx0U2l6ZVByb21pc2UgPSBudWxsO1xuICB9XG5cbiAgY2FsbChidWlsZGVyLCBhcmdzKSB7XG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSAyKSB7XG4gICAgICBjb25zdCBzdGFydCA9IGFyZ3NbMF07XG4gICAgICBjb25zdCBlbmQgPSBhcmdzWzFdO1xuXG4gICAgICAvLyBOZWVkIHRvIHNldCB0aGVzZSBoZXJlIGluc3RlYWQgb2YgYG9uQnVpbGRgIHNvIHRoYXQgdGhleVxuICAgICAgLy8gZG9uJ3QgZW5kIHVwIGluIHRoZSByZXN1bHRTaXplIHF1ZXJ5LlxuICAgICAgYnVpbGRlci5saW1pdChlbmQgLSBzdGFydCArIDEpLm9mZnNldChzdGFydCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBvbkJlZm9yZShidWlsZGVyKSB7XG4gICAgLy8gRG9uJ3QgcmV0dXJuIHRoZSBwcm9taXNlIHNvIHRoYXQgaXQgaXMgZXhlY3V0ZWRcbiAgICAvLyBpbiBwYXJhbGxlbCB3aXRoIHRoZSBhY3R1YWwgcXVlcnkuXG4gICAgdGhpcy5yZXN1bHRTaXplUHJvbWlzZSA9IGJ1aWxkZXIucmVzdWx0U2l6ZSgpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgb25BZnRlcihidWlsZGVyLCByZXN1bHQpIHtcbiAgICByZXR1cm4gdGhpcy5yZXN1bHRTaXplUHJvbWlzZS50aGVuKGNvdW50ID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdHM6IHJlc3VsdCxcbiAgICAgICAgdG90YWw6IHBhcnNlSW50KGNvdW50LCAxMClcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==