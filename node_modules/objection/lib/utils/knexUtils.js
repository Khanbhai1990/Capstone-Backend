'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDialect = getDialect;
exports.isPostgres = isPostgres;
exports.isMySql = isMySql;
exports.isSqlite = isSqlite;
exports.isMsSql = isMsSql;
exports.isKnexQueryBuilder = isKnexQueryBuilder;
exports.isKnexJoinBuilder = isKnexJoinBuilder;
exports.isKnexRaw = isKnexRaw;
exports.isKnexTransaction = isKnexTransaction;

var _builder = require('knex/lib/query/builder');

var _builder2 = _interopRequireDefault(_builder);

var _joinclause = require('knex/lib/query/joinclause');

var _joinclause2 = _interopRequireDefault(_joinclause);

var _raw = require('knex/lib/raw');

var _raw2 = _interopRequireDefault(_raw);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getDialect(knex) {
  return knex && knex.client && knex.client.dialect || null;
}

function isPostgres(knex) {
  return getDialect(knex) === 'postgresql';
}

function isMySql(knex) {
  return getDialect(knex) === 'mysql';
}

function isSqlite(knex) {
  return getDialect(knex) === 'sqlite3';
}

function isMsSql(knex) {
  return getDialect(knex) === 'mssql';
}

function isKnexQueryBuilder(value) {
  return value instanceof _builder2.default;
}

function isKnexJoinBuilder(value) {
  return value instanceof _joinclause2.default;
}

function isKnexRaw(value) {
  return value instanceof _raw2.default;
}

function isKnexTransaction(knex) {
  return !!getDialect(knex) && typeof knex.commit === 'function' && typeof knex.rollback === 'function';
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhVdGlscy5qcyJdLCJuYW1lcyI6WyJnZXREaWFsZWN0IiwiaXNQb3N0Z3JlcyIsImlzTXlTcWwiLCJpc1NxbGl0ZSIsImlzTXNTcWwiLCJpc0tuZXhRdWVyeUJ1aWxkZXIiLCJpc0tuZXhKb2luQnVpbGRlciIsImlzS25leFJhdyIsImlzS25leFRyYW5zYWN0aW9uIiwia25leCIsImNsaWVudCIsImRpYWxlY3QiLCJ2YWx1ZSIsImNvbW1pdCIsInJvbGxiYWNrIl0sIm1hcHBpbmdzIjoiOzs7OztRQUlnQkEsVSxHQUFBQSxVO1FBSUFDLFUsR0FBQUEsVTtRQUlBQyxPLEdBQUFBLE87UUFJQUMsUSxHQUFBQSxRO1FBSUFDLE8sR0FBQUEsTztRQUlBQyxrQixHQUFBQSxrQjtRQUlBQyxpQixHQUFBQSxpQjtRQUlBQyxTLEdBQUFBLFM7UUFJQUMsaUIsR0FBQUEsaUI7O0FBcENoQjs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVPLFNBQVNSLFVBQVQsQ0FBb0JTLElBQXBCLEVBQTBCO0FBQy9CLFNBQVFBLFFBQVFBLEtBQUtDLE1BQWIsSUFBdUJELEtBQUtDLE1BQUwsQ0FBWUMsT0FBcEMsSUFBZ0QsSUFBdkQ7QUFDRDs7QUFFTSxTQUFTVixVQUFULENBQW9CUSxJQUFwQixFQUEwQjtBQUMvQixTQUFPVCxXQUFXUyxJQUFYLE1BQXFCLFlBQTVCO0FBQ0Q7O0FBRU0sU0FBU1AsT0FBVCxDQUFpQk8sSUFBakIsRUFBdUI7QUFDNUIsU0FBT1QsV0FBV1MsSUFBWCxNQUFxQixPQUE1QjtBQUNEOztBQUVNLFNBQVNOLFFBQVQsQ0FBa0JNLElBQWxCLEVBQXdCO0FBQzdCLFNBQU9ULFdBQVdTLElBQVgsTUFBcUIsU0FBNUI7QUFDRDs7QUFFTSxTQUFTTCxPQUFULENBQWlCSyxJQUFqQixFQUF1QjtBQUM1QixTQUFPVCxXQUFXUyxJQUFYLE1BQXFCLE9BQTVCO0FBQ0Q7O0FBRU0sU0FBU0osa0JBQVQsQ0FBNEJPLEtBQTVCLEVBQW1DO0FBQ3hDLFNBQU9BLGtDQUFQO0FBQ0Q7O0FBRU0sU0FBU04saUJBQVQsQ0FBMkJNLEtBQTNCLEVBQWtDO0FBQ3ZDLFNBQU9BLHFDQUFQO0FBQ0Q7O0FBRU0sU0FBU0wsU0FBVCxDQUFtQkssS0FBbkIsRUFBMEI7QUFDL0IsU0FBT0EsOEJBQVA7QUFDRDs7QUFFTSxTQUFTSixpQkFBVCxDQUEyQkMsSUFBM0IsRUFBaUM7QUFDdEMsU0FBTyxDQUFDLENBQUNULFdBQVdTLElBQVgsQ0FBRixJQUFzQixPQUFPQSxLQUFLSSxNQUFaLEtBQXVCLFVBQTdDLElBQTJELE9BQU9KLEtBQUtLLFFBQVosS0FBeUIsVUFBM0Y7QUFDRCIsImZpbGUiOiJrbmV4VXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgS25leFF1ZXJ5QnVpbGRlciBmcm9tICdrbmV4L2xpYi9xdWVyeS9idWlsZGVyJ1xuaW1wb3J0IEpvaW5DbGF1c2UgZnJvbSAna25leC9saWIvcXVlcnkvam9pbmNsYXVzZSdcbmltcG9ydCBLbmV4UmF3IGZyb20gJ2tuZXgvbGliL3Jhdyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREaWFsZWN0KGtuZXgpIHtcbiAgcmV0dXJuIChrbmV4ICYmIGtuZXguY2xpZW50ICYmIGtuZXguY2xpZW50LmRpYWxlY3QpIHx8IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Bvc3RncmVzKGtuZXgpIHtcbiAgcmV0dXJuIGdldERpYWxlY3Qoa25leCkgPT09ICdwb3N0Z3Jlc3FsJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTXlTcWwoa25leCkge1xuICByZXR1cm4gZ2V0RGlhbGVjdChrbmV4KSA9PT0gJ215c3FsJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3FsaXRlKGtuZXgpIHtcbiAgcmV0dXJuIGdldERpYWxlY3Qoa25leCkgPT09ICdzcWxpdGUzJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTXNTcWwoa25leCkge1xuICByZXR1cm4gZ2V0RGlhbGVjdChrbmV4KSA9PT0gJ21zc3FsJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzS25leFF1ZXJ5QnVpbGRlcih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBLbmV4UXVlcnlCdWlsZGVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNLbmV4Sm9pbkJ1aWxkZXIodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgSm9pbkNsYXVzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzS25leFJhdyh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBLbmV4UmF3O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNLbmV4VHJhbnNhY3Rpb24oa25leCkge1xuICByZXR1cm4gISFnZXREaWFsZWN0KGtuZXgpICYmIHR5cGVvZiBrbmV4LmNvbW1pdCA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2Yga25leC5yb2xsYmFjayA9PT0gJ2Z1bmN0aW9uJztcbn1cbiJdfQ==